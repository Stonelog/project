 如何去构建 HuffmanTree 

	HuffmanTreeNode结点的构建 : 带权值的结点

	HuffmanTree的构造函数的参数的设计：T类型的指针 ,该数组的大小 , 无效值

	编写仿函数Compare : 用于比较两个结点权值的大小，目的在与建立
			    Heap<Node*, Compare> minHeap ;

	将数组中所有的有效值入堆得到小堆

	取堆顶元素两次(即取到的结点的权值是最小的两个)

	两结点权值之和构建它两的父亲结点

	再将父亲结点入堆，重新选取两个最小的，直到堆栈只有一个结点结束(该结点即是HuffmanTree的根)
 
	如何去构建 HuffmanTree （利用最小堆）选取两个最小的
	//没有默认的构造函数

//不是有效值就不要插入到HuffmanTree中，此时CharInfo要重载 != (根据里面的字符的个数判断)刚开始全是0
  const 的问题  const对象不可以调用非const的成员函数；非const对象可以调用const的成员函数；

HuffmanTreeCode的生成

如何生成压缩文件


生成配置文件（保存源文件的字符以及相应的个数）为了方便可以单独解析所压缩的文件


unsigned char 问题 会造成数组下标越界，还会遇到中文字符无法解析


解析压缩文件时，读取字符时要为 unsigned char 不然造成文件只解析了一半就结束了 

换行符的处理

文件只解析了一半就结束了 : 文件的打开方式不正确

在解析图片时，解析了一半，原因：读的字符为-1，结束了循环，方法 !feof(fOut)作为文件的结束标志 


 